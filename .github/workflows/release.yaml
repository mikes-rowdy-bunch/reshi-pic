name: Release

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

env:
  REGISTRY: https://npm.pkg.github.com/

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --ignore-engines --ignore-peer-dependencies

      - name: Run linting
        run: yarn lint

      - name: Run tests
        run: yarn test

  release:
    name: Release
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Get STS Token
        id: octo-sts
        uses: octo-sts/action@6177b4481c00308b3839969c3eca88c96a91775f # v1.0.0
        with:
          scope: mikes-rowdy-bunch/reshi-pic
          identity: release

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.octo-sts.outputs.token }}

      - name: Configure Git
        run: |
          git config --global user.email "semantic-release-bot@mikes-rowdy-bunch.com"
          git config --global user.name "semantic-release-bot"
          git remote set-url origin https://x-access-token:${{ steps.octo-sts.outputs.token }}@github.com/mikes-rowdy-bunch/reshi-pic.git

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-engines --ignore-peer-dependencies

      - name: Install semantic-release and plugins
        run: yarn add -D semantic-release @semantic-release/git @semantic-release/github @semantic-release/npm @semantic-release/commit-analyzer @semantic-release/release-notes-generator typescript

      - name: Build package
        run: yarn tsc

      - name: Create Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ steps.octo-sts.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          VERSION=$(yarn semantic-release --dry-run | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+' || echo '')
          if [ -n "$VERSION" ]; then
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            yarn semantic-release
          else
            echo "No new version to be released"
            exit 0
          fi
